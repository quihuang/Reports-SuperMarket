/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.Dog;
import Classes.Reportes.ReportBreedPie;
import Classes.Reportes.ReportListadoProducto;
import Classes.Reportes.ReporteProveedor;
import Controller.ProveedorController;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellStyle;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author zambr
 */
public class ProveedorView extends javax.swing.JFrame {

    /**
     * Creates new form ProveedorView
     */
    
    ProveedorController controller;
    
    public ProveedorView() {
        controller = new ProveedorController();
        initComponents();
        
        this.generarReporte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        pnlReporte = new javax.swing.JPanel();
        btnGenerarExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        lblTitulo.setText("Reporte Proveedores");

        pnlReporte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlReporteLayout = new javax.swing.GroupLayout(pnlReporte);
        pnlReporte.setLayout(pnlReporteLayout);
        pnlReporteLayout.setHorizontalGroup(
            pnlReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlReporteLayout.setVerticalGroup(
            pnlReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        btnGenerarExcel.setText("Generar excel");
        btnGenerarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlReporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerarExcel)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo)
                    .addComponent(btnGenerarExcel))
                .addGap(18, 18, 18)
                .addComponent(pnlReporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarExcelActionPerformed
        // TODO add your handling code here:
        this.generarReporteListadoProducto();
    }//GEN-LAST:event_btnGenerarExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProveedorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProveedorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProveedorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProveedorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProveedorView().setVisible(true);
            }
        });
    }
    
    public void generarReporte(){
        
        try{
            LinkedList<ReporteProveedor> list = controller.obtenerReporteProveedor();
            
            if( list != null){
                
                //Configurar el gráfico
                DefaultPieDataset dataset = new DefaultPieDataset();
                
                for( ReporteProveedor temp : list ){
                    dataset.setValue( temp.getRazonSocial(), temp.getCantidad());
                }
                
                JFreeChart chart = ChartFactory.createPieChart("Productos por proveedor", dataset, true, true, false);
                ChartPanel panel = new ChartPanel(chart);
                
                pnlReporte.setLayout( new java.awt.BorderLayout() );
                pnlReporte.add(panel, BorderLayout.CENTER );
                pnlReporte.validate();
                
            }else{
                JOptionPane.showMessageDialog(this, "No hay datos para generar el reporte", "Gestión mascotas", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Hubo en error en la base de datos", "Gestión de proveedores", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void generarReporteListadoProducto(){
         try{
            LinkedList<ReportListadoProducto> list = controller.obtenerReporteListadoProducto();
            
            if( list != null){
                
                HSSFWorkbook book = new HSSFWorkbook();
                HSSFSheet sheet = book.createSheet();
                book.setSheetName(0, "Listado productos");

                String[] headers = new String[]{
                    "Nit",
                    "Razon Social",
                    "Direccion",
                    "Telefono",
                    "Nombre producto",
                    "Valor unitario",
                    "Stock"
                };

                CellStyle headerCellStyle = book.createCellStyle();
                HSSFFont font = book.createFont();
                font.setBold(true);
                headerCellStyle.setFont(font);

                HSSFRow headersRow = sheet.createRow(0);
                for (int i = 0; i < headers.length; i++) {
                    String header = headers[i];
                    HSSFCell cell = headersRow.createCell(i);
                    cell.setCellStyle(headerCellStyle);
                    cell.setCellValue(header);
                }

                for (int i = 0; i < list.size(); i++) {
                    
                    HSSFRow row = sheet.createRow(i + 1);
                    
                    row.createCell(0).setCellValue( list.get(i).getNit() );
                    row.createCell(1).setCellValue( list.get(i).getRazonSocial());
                    row.createCell(2).setCellValue( list.get(i).getDireccion());
                    row.createCell(3).setCellValue( list.get(i).getTelefono());
                    row.createCell(4).setCellValue( list.get(i).getNombre());
                    row.createCell(5).setCellValue( list.get(i).getValorUnitario() );
                    row.createCell(6).setCellValue( list.get(i).getStock() );
                }
                try {
                    FileOutputStream file = new FileOutputStream("listado_productos.xls");
                    book.write(file);
                    file.close();
                    
                    JOptionPane.showMessageDialog(this, "Listado de productos generado correctamente", "Gestión proveedores", JOptionPane.INFORMATION_MESSAGE);
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(frmGestionVeterinaria.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(frmGestionVeterinaria.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }else{
                JOptionPane.showMessageDialog(this, "No hay datos para generar el reporte", "Gestión proveedores", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Hubo en error en la base de datos", "Gestión de proveedores", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarExcel;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlReporte;
    // End of variables declaration//GEN-END:variables
}
